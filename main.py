
import logging
import os
import telegram
from telegram.ext import CommandHandler, Updater
from google.oauth2.service_account import Credentials
import gspread

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BOT_TOKEN = os.getenv("BOT_TOKEN")
SHEET_URL = os.getenv("SHEET_URL")
OWNER_CHAT_ID = os.getenv("OWNER_CHAT_ID")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Ç–∞–±–ª–∏—Ü–µ
def get_sheet_data():
    try:
        creds = Credentials.from_service_account_file("creds.json", scopes=["https://www.googleapis.com/auth/spreadsheets.readonly"])
        gc = gspread.authorize(creds)
        sheet = gc.open_by_url(SHEET_URL).sheet1
        data = sheet.get_all_records()
        return data
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ —Ç–∞–±–ª–∏—Ü–µ: {e}")
        return []

# –ö–æ–º–∞–Ω–¥—ã
def start(update, context):
    update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî —Ç–≤–æ–π –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–π –±–æ—Ç. –ù–∞–ø–∏—à–∏ /portfolio, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ø–æ—Ä—Ç—Ñ–µ–ª—å.")

def portfolio(update, context):
    data = get_sheet_data()
    if not data:
        update.message.reply_text("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ. –ü—Ä–æ–≤–µ—Ä—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Ç–∞–±–ª–∏—Ü–µ.")
        return
    message = "üìä –¢–≤–æ–π –ø–æ—Ä—Ç—Ñ–µ–ª—å:
"
    for row in data:
        asset = row.get("–ê–∫—Ç–∏–≤", "N/A")
        value = row.get("–¢–µ–∫—É—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å (‚Ç¨)", 0)
        message += f"- {asset}: {value} ‚Ç¨\n"
    update.message.reply_text(message)

def main():
    updater = Updater(BOT_TOKEN, use_context=True)
    dp = updater.dispatcher

    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("portfolio", portfolio))

    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
